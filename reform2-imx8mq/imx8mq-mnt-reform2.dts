// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
/*
 * Copyright 2018 Boundary Devices
 * Copyright 2019 MNT Research GmbH
 */

/dts-v1/;

#include "dt-bindings/input/input.h"
#include "dt-bindings/pwm/pwm.h"
#include "dt-bindings/usb/pd.h"
#include "imx8mq.dtsi"

/ {
	model = "MNT Reform 2";
	compatible = "boundary,imx8mq-nitrogen8m_som", "fsl,imx8mq";
	
	memory@40000000 {
		device_type = "memory";
		reg = <0x00000000 0x40000000 0 0xc0000000>;
	};
	
	/* D-3 audio */
	sound {
		compatible = "simple-audio-card";
		simple-audio-card,name = "wm8960-audio";
		simple-audio-card,format = "i2s";
		simple-audio-card,frame-master = <&dai_cpu_master>;
		simple-audio-card,bitclock-master = <&dai_cpu_master>;

		simple-audio-card,widgets =
			"Microphone", "Mic Jack",
			"Line", "Line In",
			"Line", "Line Out",
			"Speaker", "Speaker",
			"Headphone", "Headphone Jack";
		simple-audio-card,routing =
			"Headphone Jack", "HP_L",
			"Headphone Jack", "HP_R",
			"Speaker", "SPK_LP",
			"Speaker", "SPK_LN",
			"Speaker", "SPK_RP",
			"Speaker", "SPK_RN",
			"LINPUT1", "Mic Jack",
			"LINPUT3", "Mic Jack",
			"RINPUT1", "Mic Jack",
			"RINPUT2", "Mic Jack";

		dai_cpu_master: simple-audio-card,cpu {
			sound-dai = <&sai2>;
		};

		dailink0: simple-audio-card,codec {
			sound-dai = <&codec>;
		};
	};

	/* D-2 audio */
	/*sound {
		compatible = "simple-audio-card";
		simple-audio-card,name = "wm8731-audio";
		simple-audio-card,format = "i2s";
		simple-audio-card,frame-master = <&dai_cpu_master>;
		simple-audio-card,bitclock-master = <&dai_cpu_master>;
		
		simple-audio-card,widgets =
			"Headphone", "Headphone Jack",
			"Line", "Line Out",
			"Microphone", "Mic Jack",
			"Line", "Line In";
		simple-audio-card,routing =
			"Headphone Jack", "RHPOUT",
			"Headphone Jack", "LHPOUT",
			"MICIN", "Mic Bias",
			"Mic Bias", "Mic Jack";

		dai_cpu_master: simple-audio-card,cpu {
			sound-dai = <&sai2>;
		};

		dailink0: simple-audio-card,codec {
			sound-dai = <&codec>;
		};
	};*/
	
	backlight: backlight {
		compatible = "pwm-backlight";
		pwms = <&pwm2 0 10000>;
		enable-gpios = <&gpio1 10 GPIO_ACTIVE_HIGH>;
		brightness-levels = <0 32 64 128 160 200 255>;
		default-brightness-level = <6>;
		status = "okay";
	};

	panel: panel {
		compatible = "lg,lp120up1", "simple-panel";
		//backlight = <&backlight>;
		status = "okay";
		no-hpd;
		power = <&reg_vref_3v3>;

		port@0 {
			panel_in: endpoint {
				remote-endpoint = <&edp_bridge_out>;
			};
		};
	};
	
	reg_vref_0v9: regulator-vref-0v9 {
		compatible = "regulator-fixed";
		regulator-name = "vref-0v9";
		regulator-min-microvolt = <900000>;
		regulator-max-microvolt = <900000>;
		regulator-always-on;
	};

	reg_vref_1v2: regulator-vref-1v2 {
		compatible = "regulator-fixed";
		regulator-name = "vref-1v2";
		regulator-min-microvolt = <1200000>;
		regulator-max-microvolt = <1200000>;
		regulator-always-on;
	};
	
	reg_vref_1v8: regulator-vref-1v8 {
		compatible = "regulator-fixed";
		regulator-name = "vref-1v8";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		regulator-always-on;
	};

	reg_vref_2v5: regulator-vref-2v5 {
		compatible = "regulator-fixed";
		regulator-name = "vref-2v5";
		regulator-min-microvolt = <2500000>;
		regulator-max-microvolt = <2500000>;
		regulator-always-on;
	};

	reg_vref_3v3: regulator-vref-3v3 {
		compatible = "regulator-fixed";
		regulator-name = "vref-3v3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-always-on;
	};

	reg_vref_5v: regulator-vref-5v {
		compatible = "regulator-fixed";
		regulator-name = "vref-5v";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		regulator-always-on;
	};

	reg_usdhc2_vmmc: regulator-vsd-3v3 {
		pinctrl-names = "default";
		compatible = "regulator-fixed";
		regulator-name = "3V3_SD";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-always-on;
	};
	
	pcie0_refclk: pcie0-refclk {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-frequency = <100000000>;
	};

	pcie1_refclk: pcie1-refclk {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-frequency = <100000000>;
	};
};

&iomuxc {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hog>;

	pinctrl_hog: hoggrp {
		fsl,pins = <
		//MX8MQ_IOMUXC_GPIO1_IO10_GPIO1_IO10		0x19	/* Pin 105 */
		MX8MQ_IOMUXC_SAI5_RXC_GPIO3_IO20		0x19 // FIXME what's this?
		MX8MQ_IOMUXC_GPIO1_IO14_GPIO1_IO14		0x56 // pullup usb hub reset (0x40)
		>;
	};

	pinctrl_fec1: fec1grp {
		fsl,pins = <
			MX8MQ_IOMUXC_ENET_MDC_ENET1_MDC			0x3
			MX8MQ_IOMUXC_ENET_MDIO_ENET1_MDIO		0x23
			MX8MQ_IOMUXC_ENET_TX_CTL_ENET1_RGMII_TX_CTL	0x1f
			MX8MQ_IOMUXC_ENET_TXC_ENET1_RGMII_TXC		0x1f
			MX8MQ_IOMUXC_ENET_TD0_ENET1_RGMII_TD0		0x1f
			MX8MQ_IOMUXC_ENET_TD1_ENET1_RGMII_TD1		0x1f
			MX8MQ_IOMUXC_ENET_TD2_ENET1_RGMII_TD2		0x1f
			MX8MQ_IOMUXC_ENET_TD3_ENET1_RGMII_TD3		0x1f
			MX8MQ_IOMUXC_ENET_RX_CTL_ENET1_RGMII_RX_CTL	0x91
			MX8MQ_IOMUXC_ENET_RXC_ENET1_RGMII_RXC		0x91
			MX8MQ_IOMUXC_ENET_RD0_ENET1_RGMII_RD0		0x91
			MX8MQ_IOMUXC_ENET_RD1_ENET1_RGMII_RD1		0x91
			MX8MQ_IOMUXC_ENET_RD2_ENET1_RGMII_RD2		0x91
			MX8MQ_IOMUXC_ENET_RD3_ENET1_RGMII_RD3		0x91
#define GP_FEC1_RESET	<&gpio1 9 GPIO_ACTIVE_LOW>
			MX8MQ_IOMUXC_GPIO1_IO09_GPIO1_IO9		0x19
#define GPIRQ_FEC1_PHY	<&gpio1 11 IRQ_TYPE_LEVEL_LOW>
			MX8MQ_IOMUXC_GPIO1_IO11_GPIO1_IO11		0x59
		>;
	};

	pinctrl_i2c1: i2c1grp {
		fsl,pins = <
			MX8MQ_IOMUXC_I2C1_SCL_I2C1_SCL			0x4000007f
			MX8MQ_IOMUXC_I2C1_SDA_I2C1_SDA			0x4000007f
		>;
	};
	
	pinctrl_i2c1_pca9546: i2c1-pca9546grp {
		fsl,pins = <
#define GP_I2C1_PCA9546_RESET	<&gpio1 4 GPIO_ACTIVE_LOW>
			MX8MQ_IOMUXC_GPIO1_IO04_GPIO1_IO4		0x46
		>;
	};

	pinctrl_i2c2: i2c2grp {
		fsl,pins = <
			MX8MQ_IOMUXC_I2C2_SCL_I2C2_SCL			0x4000007f
			MX8MQ_IOMUXC_I2C2_SDA_I2C2_SDA			0x4000007f
		>;
	};

	pinctrl_i2c3: i2c3grp {
		fsl,pins = <
			MX8MQ_IOMUXC_I2C3_SCL_I2C3_SCL			0x4000007f
			MX8MQ_IOMUXC_I2C3_SDA_I2C3_SDA			0x4000007f
		>;
	};

	pinctrl_i2c4: i2c4grp {
		fsl,pins = <
			MX8MQ_IOMUXC_I2C4_SCL_I2C4_SCL			0x4000007f
			MX8MQ_IOMUXC_I2C4_SDA_I2C4_SDA			0x4000007f
		>;
	};

	pinctrl_pcie0: pcie0grp {
		fsl,pins = <
#define GP_PCIE0_RESET		<&gpio5 7 GPIO_ACTIVE_LOW>
			MX8MQ_IOMUXC_ECSPI1_MOSI_GPIO5_IO7		0x16
		>;
	};
	
	pinctrl_pcie1: pcie1grp {
		fsl,pins = <
			MX8MQ_IOMUXC_SAI5_RXD2_GPIO3_IO23		0x16
		>;
	};

	pinctrl_pwm2: pwm2grp {
		fsl,pins = <
			MX8MQ_IOMUXC_SPDIF_RX_PWM2_OUT			0x16
		>;
	};

	pinctrl_pwm3: pwm3grp {
		fsl,pins = <
			MX8MQ_IOMUXC_SPDIF_TX_PWM3_OUT			0x16
		>;
	};

	pinctrl_pwm4: pwm4grp {
		fsl,pins = <
			MX8MQ_IOMUXC_SAI3_MCLK_PWM4_OUT			0x16
		>;
	};

	pinctrl_reg_arm_dram: reg-arm-dram {
		fsl,pins = <
#define GP_ARM_DRAM_VSEL	<&gpio3 24 GPIO_ACTIVE_HIGH>
			MX8MQ_IOMUXC_SAI5_RXD3_GPIO3_IO24		0x16
		>;
	};

	pinctrl_reg_dram_1p1v: reg-dram-1p1v {
		fsl,pins = <
#define GP_DRAM_1P1_VSEL	<&gpio2 11 GPIO_ACTIVE_HIGH>
			MX8MQ_IOMUXC_SD1_STROBE_GPIO2_IO11		0x16
		>;
	};

	pinctrl_reg_soc_gpu_vpu: reg-soc-gpu-vpu {
		fsl,pins = <
#define GP_SOC_GPU_VPU_VSEL	<&gpio2 20 GPIO_ACTIVE_HIGH>
			MX8MQ_IOMUXC_SD2_WP_GPIO2_IO20			0x16
		>;
	};

	/*pinctrl_sai1: sai1grp {
		fsl,pins = <
			MX8MQ_IOMUXC_SAI1_MCLK_SAI1_MCLK		0xd6
			MX8MQ_IOMUXC_SAI1_TXFS_SAI1_TX_SYNC		0xd6
			MX8MQ_IOMUXC_SAI1_TXC_SAI1_TX_BCLK		0xd6
			MX8MQ_IOMUXC_SAI1_TXD0_SAI1_TX_DATA0		0xd6
			MX8MQ_IOMUXC_SAI1_RXD0_SAI1_RX_DATA0		0xd6
		>;
	};*/

	pinctrl_sai2: sai2grp {
		fsl,pins = <
			MX8MQ_IOMUXC_SAI2_RXD0_SAI2_RX_DATA0		0xd6	/* Pin 166 */
			MX8MQ_IOMUXC_SAI2_RXFS_SAI2_RX_SYNC		0xd6	/* Pin 168 */
			MX8MQ_IOMUXC_SAI2_TXC_SAI2_TX_BCLK		0xd6	/* Pin 170 */
			MX8MQ_IOMUXC_SAI2_TXFS_SAI2_TX_SYNC		0xd6	/* Pin 172 */
			MX8MQ_IOMUXC_SAI2_RXC_SAI2_RX_BCLK		0xd6	/* Pin 174 */
			MX8MQ_IOMUXC_SAI2_MCLK_SAI2_MCLK		0xd6	/* Pin 176 */
			MX8MQ_IOMUXC_SAI2_TXD0_SAI2_TX_DATA0		0xd6	/* Pin 168 */
		>;
	};

	pinctrl_sai3: sai3grp {
		fsl,pins = <
			/* Bluetooth PCM */
			MX8MQ_IOMUXC_SAI3_TXFS_SAI3_TX_SYNC		0xd6
			MX8MQ_IOMUXC_SAI3_TXC_SAI3_TX_BCLK		0xd6
			MX8MQ_IOMUXC_SAI3_TXD_SAI3_TX_DATA0		0xd6
			MX8MQ_IOMUXC_SAI3_RXD_SAI3_RX_DATA0		0xd6
		>;
	};

	pinctrl_uart1: uart1grp {
		fsl,pins = <
			MX8MQ_IOMUXC_UART1_RXD_UART1_DCE_RX		0x45
			MX8MQ_IOMUXC_UART1_TXD_UART1_DCE_TX		0x45
		>;
	};

	pinctrl_uart2: uart2grp {
		fsl,pins = <
			MX8MQ_IOMUXC_UART2_RXD_UART2_DCE_RX		0x45
			MX8MQ_IOMUXC_UART2_TXD_UART2_DCE_TX		0x45
		>;
	};

	pinctrl_uart3: uart3grp {
		fsl,pins = <
			MX8MQ_IOMUXC_UART3_RXD_UART3_DCE_RX		0x45
			MX8MQ_IOMUXC_UART3_TXD_UART3_DCE_TX		0x45
			MX8MQ_IOMUXC_ECSPI1_SS0_UART3_DCE_RTS_B		0x45
			MX8MQ_IOMUXC_ECSPI1_MISO_UART3_DCE_CTS_B	0x45
		>;
	};

	pinctrl_uart4: uart4grp {
		fsl,pins = <
			MX8MQ_IOMUXC_UART4_RXD_UART4_DCE_RX		0x45
			MX8MQ_IOMUXC_UART4_TXD_UART4_DCE_TX		0x45
		>;
	};

	/*pinctrl_usb3_0: usb3-0grp {
		fsl,pins = <
			MX8MQ_IOMUXC_GPIO1_IO13_USB1_OTG_OC		0x16
		>;
	};

	pinctrl_usb3_1: usb3-1grp {
		fsl,pins = <
#define GP_USB3_1_HUB_RESET	<&gpio1 14 GPIO_ACTIVE_LOW>
			MX8MQ_IOMUXC_GPIO1_IO14_GPIO1_IO14		0x16
		>;
	};*/

	pinctrl_usdhc1: usdhc1grp {
		fsl,pins = <
			MX8MQ_IOMUXC_SD1_CLK_USDHC1_CLK			0x83
			MX8MQ_IOMUXC_SD1_CMD_USDHC1_CMD			0xc3
			MX8MQ_IOMUXC_SD1_DATA0_USDHC1_DATA0		0xc3
			MX8MQ_IOMUXC_SD1_DATA1_USDHC1_DATA1		0xc3
			MX8MQ_IOMUXC_SD1_DATA2_USDHC1_DATA2		0xc3
			MX8MQ_IOMUXC_SD1_DATA3_USDHC1_DATA3		0xc3
			MX8MQ_IOMUXC_SD1_DATA4_USDHC1_DATA4		0xc3
			MX8MQ_IOMUXC_SD1_DATA5_USDHC1_DATA5		0xc3
			MX8MQ_IOMUXC_SD1_DATA6_USDHC1_DATA6		0xc3
			MX8MQ_IOMUXC_SD1_DATA7_USDHC1_DATA7		0xc3
#if 0
			MX8MQ_IOMUXC_SD1_RESET_B_USDHC1_RESET_B		0xc1
#else
#define GP_EMMC_RESET		<&gpio2 10 GPIO_ACTIVE_LOW>
			MX8MQ_IOMUXC_SD1_RESET_B_GPIO2_IO10		0x41
#endif
		>;
	};

	pinctrl_usdhc1_100mhz: usdhc1grp100mhz {
		fsl,pins = <
			MX8MQ_IOMUXC_SD1_CLK_USDHC1_CLK			0x8d
			MX8MQ_IOMUXC_SD1_CMD_USDHC1_CMD			0xcd
			MX8MQ_IOMUXC_SD1_DATA0_USDHC1_DATA0		0xcd
			MX8MQ_IOMUXC_SD1_DATA1_USDHC1_DATA1		0xcd
			MX8MQ_IOMUXC_SD1_DATA2_USDHC1_DATA2		0xcd
			MX8MQ_IOMUXC_SD1_DATA3_USDHC1_DATA3		0xcd
			MX8MQ_IOMUXC_SD1_DATA4_USDHC1_DATA4		0xcd
			MX8MQ_IOMUXC_SD1_DATA5_USDHC1_DATA5		0xcd
			MX8MQ_IOMUXC_SD1_DATA6_USDHC1_DATA6		0xcd
			MX8MQ_IOMUXC_SD1_DATA7_USDHC1_DATA7		0xcd
		>;
	};

	pinctrl_usdhc1_200mhz: usdhc1grp200mhz {
		fsl,pins = <
			MX8MQ_IOMUXC_SD1_CLK_USDHC1_CLK			0x9f
			MX8MQ_IOMUXC_SD1_CMD_USDHC1_CMD			0xdf
			MX8MQ_IOMUXC_SD1_DATA0_USDHC1_DATA0		0xdf
			MX8MQ_IOMUXC_SD1_DATA1_USDHC1_DATA1		0xdf
			MX8MQ_IOMUXC_SD1_DATA2_USDHC1_DATA2		0xdf
			MX8MQ_IOMUXC_SD1_DATA3_USDHC1_DATA3		0xdf
			MX8MQ_IOMUXC_SD1_DATA4_USDHC1_DATA4		0xdf
			MX8MQ_IOMUXC_SD1_DATA5_USDHC1_DATA5		0xdf
			MX8MQ_IOMUXC_SD1_DATA6_USDHC1_DATA6		0xdf
			MX8MQ_IOMUXC_SD1_DATA7_USDHC1_DATA7		0xdf
		>;
	};

	pinctrl_usdhc2: usdhc2grp {
		fsl,pins = <
			MX8MQ_IOMUXC_SD2_CLK_USDHC2_CLK			0x03
			MX8MQ_IOMUXC_SD2_CMD_USDHC2_CMD			0xc3
			MX8MQ_IOMUXC_SD2_DATA0_USDHC2_DATA0		0xc3
			MX8MQ_IOMUXC_SD2_DATA1_USDHC2_DATA1		0xc3
			MX8MQ_IOMUXC_SD2_DATA2_USDHC2_DATA2		0xc3
			MX8MQ_IOMUXC_SD2_DATA3_USDHC2_DATA3		0xc3
			//MX8MQ_IOMUXC_GPIO1_IO00_ANAMIX_REF_CLK_32K	0x03
		>;
	};

	pinctrl_usdhc2_100mhz: usdhc2grp100mhz {
		fsl,pins = <
			MX8MQ_IOMUXC_SD2_CLK_USDHC2_CLK			0x0d
			MX8MQ_IOMUXC_SD2_CMD_USDHC2_CMD			0xcd
			MX8MQ_IOMUXC_SD2_DATA0_USDHC2_DATA0		0xcd
			MX8MQ_IOMUXC_SD2_DATA1_USDHC2_DATA1		0xcd
			MX8MQ_IOMUXC_SD2_DATA2_USDHC2_DATA2		0xcd
			MX8MQ_IOMUXC_SD2_DATA3_USDHC2_DATA3		0xcd
		>;
	};

	pinctrl_usdhc2_200mhz: usdhc2grp200mhz {
		fsl,pins = <
			MX8MQ_IOMUXC_SD2_CLK_USDHC2_CLK			0x1e
			MX8MQ_IOMUXC_SD2_CMD_USDHC2_CMD			0xce
			MX8MQ_IOMUXC_SD2_DATA0_USDHC2_DATA0		0xce
			MX8MQ_IOMUXC_SD2_DATA1_USDHC2_DATA1		0xce
			MX8MQ_IOMUXC_SD2_DATA2_USDHC2_DATA2		0xce
			MX8MQ_IOMUXC_SD2_DATA3_USDHC2_DATA3		0xce
		>;
	};

	pinctrl_wdog: wdoggrp {
		fsl,pins = <
			MX8MQ_IOMUXC_GPIO1_IO02_WDOG1_WDOG_B		0xc6
		>;
	};
};

&fec1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_fec1>;
	phy-mode = "rgmii-id";
	phy-handle = <&ethphy0>;
	//phy-reset-gpios = GP_FEC1_RESET;
	//phy-reset-duration = <10>;
	fsl,magic-packet;
	status = "okay";

	mdio {
		#address-cells = <1>;
		#size-cells = <0>;

		ethphy0: ethernet-phy@4 {
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <4>;
			//at803x,vddio-1p8v;
			interrupts = GPIRQ_FEC1_PHY;
			//max-speed = <100>;
		};
	};
};

&i2c1 {
	clock-frequency = <400000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c1>;
	status = "okay";

	// FIXME?
	// clsom
	pca9555:pca9555@20 {
		compatible = "nxp,pca9555";
		/* Role #0 */
		gpio-controller;
		#gpio-cells = <2>;
		/* Role #1 */
		interrupt-parent = <&gpio3>;
		interrupts = <17 0x1>;
		interrupt-controller;
		#interrupt-cells = <2>;
		/* Bus address */
		reg = <0x20>;
	};

	i2cmux@70 {
		compatible = "pca9546";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_i2c1_pca9546>;
		reg = <0x70>;
		reset-gpios = GP_I2C1_PCA9546_RESET;
		#address-cells = <1>;
		#size-cells = <0>;

		i2c1a: i2c1@0 {
			reg = <0>;
			#address-cells = <1>;
			#size-cells = <0>;
		};

		i2c1b: i2c1@1 {
			reg = <1>;
			#address-cells = <1>;
			#size-cells = <0>;
		};

		i2c1c: i2c1@2 {
			reg = <2>;
			#address-cells = <1>;
			#size-cells = <0>;
		};

		i2c1d: i2c1@3 {
			reg = <3>;
			#address-cells = <1>;
			#size-cells = <0>;
		};
	};
};

&i2c1a {
	reg_arm_dram: fan53555@60 {
		compatible = "fcs,fan53555";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_reg_arm_dram>;
		reg = <0x60>;
		regulator-min-microvolt =	 <900000>;
		regulator-max-microvolt = <1000000>;
		regulator-always-on;
		vsel-gpios = GP_ARM_DRAM_VSEL;
	};
};

&i2c1b {
	reg_dram_1p1v: fan53555@60 {
		compatible = "fcs,fan53555";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_reg_dram_1p1v>;
		reg = <0x60>;
		regulator-min-microvolt = <1100000>;
		regulator-max-microvolt = <1100000>;
		regulator-always-on;
		vsel-gpios = GP_DRAM_1P1_VSEL;
	};
};

&i2c1c {
	reg_soc_gpu_vpu: fan53555@60 {
		compatible = "fcs,fan53555";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_reg_soc_gpu_vpu>;
		reg = <0x60>;
		regulator-min-microvolt =	 <900000>;
		regulator-max-microvolt = <1000000>;
		regulator-always-on;
		vsel-gpios = GP_SOC_GPU_VPU_VSEL;
	};
};

&pcie0 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pcie0>;
	reset-gpio = GP_PCIE0_RESET;

	clocks = <&clk IMX8MQ_CLK_PCIE1_ROOT>,
		<&clk IMX8MQ_CLK_PCIE1_AUX>,
		<&clk IMX8MQ_CLK_PCIE1_PHY>,
		<&pcie0_refclk>;
	
	clock-names = "pcie", "pcie_aux", "pcie_phy", "pcie_bus";
	
	ext_osc = <0>;
	status = "okay";
};

&pcie1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pcie1>;
	reset-gpio = <&gpio3 23 GPIO_ACTIVE_LOW>;

	clocks = <&clk IMX8MQ_CLK_PCIE2_ROOT>,
					 <&clk IMX8MQ_CLK_PCIE2_AUX>,
					 <&clk IMX8MQ_CLK_PCIE2_PHY>,
					 <&pcie1_refclk>;
	
	clock-names = "pcie", "pcie_aux", "pcie_phy", "pcie_bus";
	
	ext_osc = <1>;
	status = "okay";
};

&pwm2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm2>;
	status = "okay";
};

&pwm3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm3>;
	status = "okay";
};

&pwm4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm4>;
	status = "okay";
};

&sai2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_sai2>;
	status = "okay";
	
	assigned-clocks = <&clk IMX8MQ_CLK_SAI2>;
	assigned-clock-parents = <&clk IMX8MQ_AUDIO_PLL2_OUT>;
	assigned-clock-rates = <12288000>;
};

&uart1 { /* console */
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1>;
	assigned-clocks = <&clk IMX8MQ_CLK_UART1>;
	assigned-clock-parents = <&clk IMX8MQ_CLK_25M>;
	status = "okay";
};

&uart2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart2>;
	assigned-clocks = <&clk IMX8MQ_CLK_UART2>;
	assigned-clock-parents = <&clk IMX8MQ_CLK_25M>;
	status = "okay";
};

&uart3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart3>;
	assigned-clocks = <&clk IMX8MQ_CLK_UART3>;
	assigned-clock-parents = <&clk IMX8MQ_CLK_25M>;
	status = "okay";
};

&usb3_phy0 {
	vbus-supply = <&reg_vref_5v>;
	status = "okay";
};

&usb_dwc3_0 {
	status = "okay";
	dr_mode = "host";
};

&usb3_phy1 {
	vbus-supply = <&reg_vref_5v>;
	status = "okay";
};

&usb_dwc3_1 {
	status = "okay";
	dr_mode = "host";
};

&usdhc1 {
	bus-width = <4>;
	//fsl,strobe-dll-delay-target = <5>;
	//fsl,tuning-start-tap = <63>;
	//fsl,tuning-step = <2>;
	no-mmc-hs400;
	non-removable;
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc1>;
	pinctrl-1 = <&pinctrl_usdhc1_100mhz>;
	pinctrl-2 = <&pinctrl_usdhc1_200mhz>;
	status = "okay";
	//cd-gpios = <&gpio1 3 GPIO_ACTIVE_HIGH>;
	//vmmc-supply = <&reg_vref_1v8>;
	//vqmmc-1-8-v;
};

// 5 of 10 cards work with these settings:
/*&usdhc2 {
	bus-width = <4>;
	fsl,strobe-dll-delay-target = <5>;
	fsl,tuning-start-tap = <63>;
	fsl,tuning-step = <2>;
	//no-sd-uhs-sdr104;
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc2>;
	pinctrl-1 = <&pinctrl_usdhc2_100mhz>;
	pinctrl-2 = <&pinctrl_usdhc2_200mhz>;
	status = "okay";
	vmmc-supply = <&reg_vref_3v3>;
	//no-1-8-v; // this makes microSD cards stop working
};*/

&usdhc2 {
	bus-width = <4>;
	// doesn't seem to make any difference
	//fsl,tuning-start-tap = <32>;
	
	// 1 can make tuning fail, 2 works on some cards, 3 same, 5 same
	//fsl,tuning-step = <2>;
	
	// 1 = no difference, 16 = no difference, 128 = no difference
	//fsl,delay-line = <0>;

	// this makes microSD cards stop working
	no-1-8-v;

	// changing these around breaks tuning
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc2>;
	pinctrl-1 = <&pinctrl_usdhc2_100mhz>;
	pinctrl-2 = <&pinctrl_usdhc2_200mhz>;
	status = "okay";
	vmmc-supply = <&reg_vref_3v3>;
	//no-sd-uhs-sdr104;

	//assigned-clocks = <&clk IMX8MQ_CLK_USDHC2>;
	//assigned-clock-rates = <200000000>;
};

/*&hdmi {
	status = "okay";
};*/

&dcss {
	status = "okay";

	clocks = <&clk IMX8MQ_CLK_DISP_APB_ROOT>,
	<&clk IMX8MQ_CLK_DISP_AXI_ROOT>,
	<&clk IMX8MQ_CLK_DISP_RTRM_ROOT>,
	<&clk IMX8MQ_CLK_DC_PIXEL>,
	<&clk IMX8MQ_CLK_DISP_DTRC>;
	clock-names = "apb", "axi", "rtrm", "pix", "dtrc";

	assigned-clocks =
	<&clk IMX8MQ_CLK_DC_PIXEL>,
	<&clk IMX8MQ_VIDEO_PLL1_BYPASS>,
	<&clk IMX8MQ_VIDEO_PLL1_REF_SEL>,
	<&clk IMX8MQ_CLK_DISP_AXI>,
	<&clk IMX8MQ_CLK_DISP_RTRM>;

	assigned-clock-parents =
	<&clk IMX8MQ_VIDEO_PLL1_OUT>,
	<&clk IMX8MQ_VIDEO_PLL1>,
	<&clk IMX8MQ_CLK_25M>,
	<&clk IMX8MQ_SYS1_PLL_800M>,
	<&clk IMX8MQ_SYS1_PLL_800M>;
	assigned-clock-rates = <594000000>, <0>, <0>,
	<800000000>,
	<400000000>;

	port@0 {
		dcss_out: endpoint {
			remote-endpoint = <&mipi_dsi_in>;
		};
	};
};


&lcdif {
	status = "okay";
	max-res = <1920>, <1080>;
	
	/*port@0 {
		lcdif_mipi_dsi: endpoint {
			remote-endpoint = <&mipi_dsi_in>;
		};
	};*/
};

&dphy {
	status = "okay";
};

&mipi_dsi {
	status = "okay";
	
	ports {
		#address-cells = <1>;
		#size-cells = <0>;

		port@0 {
			reg = <0>;
			mipi_dsi_in: endpoint {
				//remote-endpoint = <&lcdif_mipi_dsi>;
				remote-endpoint = <&dcss_out>;
			};
		};
		port@1 {
			reg = <1>;
			dsi_out: endpoint {
				remote-endpoint = <&edp_bridge_in>;
			};
		};
	};
};

&i2c3 {
	//clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c3>;
	status = "okay";
	
	/* D-3 AUDIO */
	codec: wm8960@1a {
		compatible = "wlf,wm8960";
		reg = <0x1a>;
		clocks = <&clk IMX8MQ_CLK_SAI2>;
		clock-names = "mclk";
		#sound-dai-cells = <0>;
		
		AVDD-supply = <&reg_vref_3v3>;
		HPVDD-supply = <&reg_vref_3v3>;
		DCVDD-supply = <&reg_vref_3v3>;
		DBVDD-supply = <&reg_vref_3v3>;
	};

	/* D-2 AUDIO */
	/*codec: wm8731@1a {
		compatible = "wlf,wm8731";
		reg = <0x1a>;
		clocks = <&clk IMX8MQ_CLK_SAI2>;
		clock-names = "mclk";
		#sound-dai-cells = <0>;
		
		AVDD-supply = <&reg_vref_3v3>;
		HPVDD-supply = <&reg_vref_3v3>;
		DCVDD-supply = <&reg_vref_3v3>;
		DBVDD-supply = <&reg_vref_3v3>;
	};*/

	pcf8523: pcf8523@68 {
		compatible = "nxp,pcf8523";
		reg = <0x68>;
		status = "okay";
	};
};

&i2c4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c4>;
	status = "okay";
	
	edp_bridge: sn65dsi86@2c {
		compatible = "ti,sn65dsi86";
		reg = <0x2c>;
		status = "okay";
		enable-gpios = <&gpio3 20 GPIO_ACTIVE_HIGH>;

		/*vcca-supply = <&reg_vref_1v2>;
		vcc-supply = <&reg_vref_1v2>;
		vccio-supply = <&reg_vref_1v8>;
		vpll-supply = <&reg_vref_1v8>;*/
		
		//clock-names = "refclk";
		//clocks = <&input_refclk>;

		ports {
			#address-cells = <1>;
			#size-cells = <0>;

			port@0 {
				reg = <0>;

				edp_bridge_in: endpoint {
					remote-endpoint = <&dsi_out>;
				};
			};

			port@1 {
				reg = <1>;

				edp_bridge_out: endpoint {
					//data-lanes = <2 1 3 0>;
					//lane-polarities = <0 1 0 1>;
					remote-endpoint = <&panel_in>;
				};
			};
		};
	};
};
